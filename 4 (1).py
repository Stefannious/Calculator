number_words = {
    "ноль": 0,
    "один": 1,
    "два": 2,
    "три": 3,
    "четыре": 4,
    "пять": 5,
    "шесть": 6,
    "семь": 7,
    "восемь": 8,
    "девять": 9,
    "десять": 10,
    "одиннадцать": 11,
    "двенадцать": 12,
    "тринадцать": 13,
    "четырнадцать": 14,
    "пятнадцать": 15,
    "шестнадцать": 16,
    "семнадцать": 17,
    "восемнадцать": 18,
    "девятнадцать": 19,
    "двадцать": 20,
    "двадцать_один": 21,
    "двадцать_два": 22,
    "двадцать_три": 23,
    "двадцать_четыре": 24,
    "двадцать_пять": 25,
    "двадцать_шесть": 26,
    "двадцать_семь": 27,
    "двадцать_восемь": 28,
    "двадцать_девять": 29,
    "тридцать": 30,
    "тридцать_один": 31,
    "тридцать_два": 32,
    "тридцать_три": 33,
    "тридцать_четыре": 34,
    "тридцать_пять": 35,
    "тридцать_шесть": 36,
    "тридцать_семь": 37,
    "тридцать_восемь": 38,
    "тридцать_девять": 39,
    "сорок": 40,
    "сорок_один": 41,
    "сорок_два": 42,
    "сорок_три": 43,
    "сорок_четыре": 44,
    "сорок_пять": 45,
    "сорок_шесть": 46,
    "сорок_семь": 47,
    "сорок_восемь": 48,
    "сорок_девять": 49,
    "пятьдесят": 50,
    "пятьдесят_один": 51,
    "пятьдесят_два": 52,
    "пятьдесят_три": 53,
    "пятьдесят_четыре": 54,
    "пятьдесят_пять": 55,
    "пятьдесят_шесть": 56,
    "пятьдесят_семь": 57,
    "пятьдесят_восемь": 58,
    "пятьдесят_девять": 59,
    "шестьдесят": 60,
    "шестьдесят_один": 61,
    "шестьдесят_два": 62,
    "шестьдесят_три": 63,
    "шестьдесят_четыре": 64,
    "шестьдесят_пять": 65,
    "шестьдесят_шесть": 66,
    "шестьдесят_семь": 67,
    "шестьдесят_восемь": 68,
    "шестьдесят_девять": 69,
    "семьдесят": 70,
    "семьдесят_один": 71,
    "семьдесят_два": 72,
    "семьдесят_три": 73,
    "семьдесят_четыре": 74,
    "семьдесят_пять": 75,
    "семьдесят_шесть": 76,
    "семьдесят_семь": 77,
    "семьдесят_восемь": 78,
    "семьдесят_девять": 79,
    "восемьдесят": 80,
    "восемьдесят_один": 81,
    "восемьдесят_два": 82,
    "восемьдесят_три": 83,
    "восемьдесят_четыре": 84,
    "восемьдесят_пять": 85,
    "восемьдесят_шесть": 86,
    "восемьдесят_семь": 87,
    "восемьдесят_восемь": 88,
    "восемьдесят_девять": 89,
    "девяносто": 90,
    "девяносто_один": 91,
    "девяносто_два": 92,
    "девяносто_три": 93,
    "девяносто_четыре": 94,
    "девяносто_пять": 95,
    "девяносто_шесть": 96,
    "девяносто_семь": 97,
    "девяносто_восемь": 98,
    "девяносто_девять": 99,
    "сто": 100
}

# Обратный словарь для преобразования цифр в текст
reverse_number_words ={
    0: "ноль",
    1: "один",
    2: "два",
    3: "три",
    4: "четыре",
    5: "пять",
    6: "шесть",
    7: "семь",
    8: "восемь",
    9: "девять",
    10: "десять",
    11: "одиннадцать",
    12: "двенадцать",
    13: "тринадцать",
    14: "четырнадцать",
    15: "пятнадцать",
    16: "шестнадцать",
    17: "семнадцать",
    18: "восемнадцать",
    19: "девятнадцать",
    20: "двадцать",
    21: "двадцать_один",
    22: "двадцать_два",
    23: "двадцать_три",
    24: "двадцать_четыре",
    25: "двадцать_пять",
    26: "двадцать_шесть",
    27: "двадцать_семь",
    28: "двадцать_восемь",
    29: "двадцать_девять",
    30: "тридцать",
    31: "тридцать_один",
    32: "тридцать_два",
    33: "тридцать_три",
    34: "тридцать_четыре",
    35: "тридцать_пять",
    36: "тридцать_шесть",
    37: "тридцать_семь",
    38: "тридцать_восемь",
    39: "тридцать_девять",
    40: "сорок",
    41: "сорок_один",
    42: "сорок_два",
    43: "сорок_три",
    44: "сорок_четыре",
    45: "сорок_пять",
    46: "сорок_шесть",
    47: "сорок_семь",
    48: "сорок_восемь",
    49: "сорок_девять",
    50: "пятьдесят",
    51: "пятьдесят_один",
    52: "пятьдесят_два",
    53: "пятьдесят_три",
    54: "пятьдесят_четыре",
    55: "пятьдесят_пять",
    56: "пятьдесят_шесть",
    57: "пятьдесят_семь",
    58: "пятьдесят_восемь",
    59: "пятьдесят_девять",
    60: "шестьдесят",
    61: "шестьдесят_один",
    62: "шестьдесят_два",
    63: "шестьдесят_три",
    64: "шестьдесят_четыре",
    65: "шестьдесят_пять",
    66: "шестьдесят_шесть",
    67: "шестьдесят_семь",
    68: "шестьдесят_восемь",
    69: "шестьдесят_девять",
    70: "семьдесят",
    71: "семьдесят_один",
    72: "семьдесят_два",
    73: "семьдесят_три",
    74: "семьдесят_четыре",
    75: "семьдесят_пять",
    76: "семьдесят_шесть",
    77: "семьдесят_семь",
    78: "семьдесят_восемь",
    79: "семьдесят_девять",
    80: "восемьдесят",
    81: "восемьдесят_один",
    82: "восемьдесят_два",
    83: "восемьдесят_три",
    84: "восемьдесят_четыре",
    85: "восемьдесят_пять",
    86: "восемьдесят_шесть",
    87: "восемьдесят_семь",
    88: "восемьдесят_восемь",
    89: "восемьдесят_девять",
    90: "девяносто",
    91: "девяносто_один",
    92: "девяносто_два",
    93: "девяносто_три",
    94: "девяносто_четыре",
    95: "девяносто_пять",
    96: "девяносто_шесть",
    97: "девяносто_семь",
    98: "девяносто_восемь",
    99: "девяносто_девять",
    100: "сто"
}
# Функция для преобразования текстового представления числа в целое
def text_to_number(text):
    words = text.split()  # Разделяем текст на отдельные слова
    total = 0  # Переменная для хранения итогового значения
    current = 0  # Переменная для хранения текущего значения

    for word in words:  # Проходим по каждому слову
        if word in number_words:  # Если слово является числом
            current += number_words[word]  # Добавляем его значение к текущему
        else:  # Если слово не числовое
            total += current  # Добавляем текущее значение к итогу
            current = 0  # Сбрасываем текущее значение

    return total + current  # Возвращаем итоговое значение


# Функция для выполнения арифметических операций
def calculate(num1, num2, operation):
    if operation == "плюс":
        return num1 + num2  # Складываем
    elif operation == "минус":
        return num1 - num2  # Вычитаем
    elif operation == "умножить":
        return num1 * num2  # Умножаем


# Функция для преобразования числа в текстовое представление
def number_to_text(number):
    if number in reverse_number_words:  # Проверяем, есть ли число в обратном словаре
        return reverse_number_words[number]  # Возвращаем текстовое представление
    return "Число вне диапазона"  # Если число вне диапазона, возвращаем сообщение


# Основная функция калькулятора
def calc(expression):
    tokens = expression.split()  # Разделяем входное выражение на токены
    values = []  # Список для хранения числовых значений
    operations = []  # Список для хранения операций

    # Преобразование текста в числа и операции
    for token in tokens:  # Проходим по каждому токену
        if token in number_words:  # Если токен - это число
            values.append(text_to_number(token))  # Преобразуем и добавляем в список значений
        elif token in ["плюс", "минус", "умножить"]:  # Если токен - это операция
            # Проверяем приоритет операций
            while (operations and
                   (operations[-1] == "умножить" or token != "умножить")):
                op = operations.pop()  # Берем последнюю операцию
                b = values.pop()  # Берем последнее значение
                a = values.pop()  # Берем предпоследнее значение
                # Выполняем операцию и добавляем результат обратно в список значений
                values.append(calculate(a, b, op))
            operations.append(token)  # Добавляем текущую операцию в список

    # Выполнение оставшихся операций
    while operations:  # Пока есть операции
        op = operations.pop()  # Берем последнюю операцию
        b = values.pop()  # Берем последнее значение
        a = values.pop()  # Берем предпоследнее значение
        # Выполняем операцию и добавляем результат обратно в список значений
        values.append(calculate(a, b, op))

    return number_to_text(values[0])  # Возвращаем результат в текстовом формате


print(calc("двадцать_два плюс два"))  # "тридцать восемь"
print(calc("два умножить на три плюс один"))  # "десять"
