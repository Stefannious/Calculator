# Словарь для преобразования чисел из текста в цифры
number_words = {
    "ноль": 0,
    "один": 1,
    "два": 2,
    "три": 3,
    "четыре": 4,
    "пять": 5,
    "шесть": 6,
    "семь": 7,
    "восемь": 8,
    "девять": 9,
    "десять": 10,
    "одиннадцать": 11,
    "двенадцать": 12,
    "тринадцать": 13,
    "четырнадцать": 14,
    "пятнадцать": 15,
    "шестнадцать": 16,
    "семнадцать": 17,
    "восемнадцать": 18,
    "девятнадцать": 19,
    "двадцать": 20,
    "тридцать": 30,
    "сорок": 40,
    "пятьдесят": 50,
    "шестьдесят": 60,
    "семьдесят": 70,
    "восемьдесят": 80,
    "девяносто": 90,
}

# Обратный словарь для преобразования цифр в текст
reverse_number_words = {
    0: 'ноль',
    1: 'один',
    2: 'два',
    3: 'три',
    4: 'четыре',
    5: 'пять',
    6: 'шесть',
    7: 'семь',
    8: 'восемь',
    9: 'девять',
    10: 'десять',
    11: 'одиннадцать',
    12: 'двенадцать',
    13: 'тринадцать',
    14: 'четырнадцать',
    15: 'пятнадцать',
    16: 'шестнадцать',
    17: 'семнадцать',
    18: 'восемнадцать',
    19: 'девятнадцать',
    20: 'двадцать',
    30: 'тридцать',
    40: 'сорок',
    50: 'пятьдесят',
    60: 'шестьдесят',
    70: 'семьдесят',
    80: 'восемьдесят',
    90: 'девяносто'}
# Функция для преобразования текстового представления числа в целое
def text_to_number(text):
    words = text.split()  # Разделяем текст на отдельные слова
    total = 0  # Переменная для хранения итогового значения
    current = 0  # Переменная для хранения текущего значения

    for word in words:  # Проходим по каждому слову
        if word in number_words:  # Если слово является числом
            current += number_words[word]  # Добавляем его значение к текущему
        else:  # Если слово не числовое
            total += current  # Добавляем текущее значение к итогу
            current = 0  # Сбрасываем текущее значение

    return total + current  # Возвращаем итоговое значение


# Функция для выполнения арифметических операций
def calculate(num1, num2, operation):
    if operation == "плюс":
        return num1 + num2  # Складываем
    elif operation == "минус":
        return num1 - num2  # Вычитаем
    elif operation == "умножить":
        return num1 * num2  # Умножаем


# Функция для преобразования числа в текстовое представление
def number_to_text(number):
    if number in reverse_number_words:  # Проверяем, есть ли число в обратном словаре
        return reverse_number_words[number]  # Возвращаем текстовое представление
    return "Число вне диапазона"  # Если число вне диапазона, возвращаем сообщение


# Основная функция калькулятора
def calc(expression):
    tokens = expression.split()  # Разделяем входное выражение на токены
    values = []  # Список для хранения числовых значений
    operations = []  # Список для хранения операций

    # Преобразование текста в числа и операции
    for token in tokens:  # Проходим по каждому токену
        if token in number_words:  # Если токен - это число
            values.append(text_to_number(token))  # Преобразуем и добавляем в список значений
        elif token in ["плюс", "минус", "умножить"]:  # Если токен - это операция
            # Проверяем приоритет операций
            while (operations and
                   (operations[-1] == "умножить" or token != "умножить")):
                op = operations.pop()  # Берем последнюю операцию
                b = values.pop()  # Берем последнее значение
                a = values.pop()  # Берем предпоследнее значение
                # Выполняем операцию и добавляем результат обратно в список значений
                values.append(calculate(a, b, op))
            operations.append(token)  # Добавляем текущую операцию в список

    # Выполнение оставшихся операций
    while operations:  # Пока есть операции
        op = operations.pop()  # Берем последнюю операцию
        b = values.pop()  # Берем последнее значение
        a = values.pop()  # Берем предпоследнее значение
        # Выполняем операцию и добавляем результат обратно в список значений
        values.append(calculate(a, b, op))

    return number_to_text(values[0])  # Возвращаем результат в текстовом формате


# Примеры использования
print(calc("двадцать пять плюс тринадцать"))  # "тридцать восемь"
print(calc("пять плюс два умножить на три минус один"))  # "десять"